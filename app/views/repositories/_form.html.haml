= form_for @repository, :url => @url, :html => { :id => 'repository-form' } do |f|
  = f.error_messages
  %div
    %label{:for => "url"} Repository URL:
    = f.text_field :url, {:placeholder => '', :autocapitalize => 'off', :autocorrect => 'off', :spellcheck => 'false'}
  %div
    %label{:for => "repository_name"} Repository Name:
    = f.text_field :repository_name, {:placeholder => '(default is based off url)', :autocapitalize => 'off', :autocorrect => 'off', :spellcheck => 'false'}
  %div
    %label{:for => "test_command"} Test Command:
    = f.text_field :test_command, {:placeholder => 'e.g. script/ci', :autocapitalize => 'off', :autocorrect => 'off', :spellcheck => 'false'}
  %div
    %label{:for => "command_flag"} Command Flag:
    = f.text_field :command_flag, {:placeholder => '', :autocapitalize => 'off', :autocorrect => 'off', :spellcheck => 'false'}
  %div
    %label{:for => "timeout"} Timeout a build part after:
    = f.text_field :timeout, {:id => "timeout"}
    minutes
  %div
    %label{:for => "run_ci"} Trigger build on push to master:
    = f.check_box :run_ci, {:id => "run_ci"}
  %div
    %label{:for => "build_pull_requests"} Build pull requests:
    = f.check_box :build_pull_requests, {:id => "build_pull_requests"}
  %div
    %label{:for => "allows_kochiku_merges"} Allow developers to request branches be merged into master on success:
    = f.check_box :allows_kochiku_merges, {:id => "allows_kochiku_merges"}

  %fieldset
    %legend On a green build
    %div
      %label{:for => "on_green_update"} Update branches to last green commit:
      = f.text_field :on_green_update, {:id => "on_green_update", :placeholder => "Comma separated list of branches"}
    %div
      %label{:for => "on_success_note"} Add git note:
      = f.text_field :on_success_note, {:id => "on_success_note", :placeholder => "ex. (ci=green)"}
    %div
      %label{:for => "on_success_script"} Run:
      = f.text_field :on_success_script, {:id => "on_success_script"}

  %fieldset
    %legend On a red build
    %div
      %label{:for => "send_build_failure_email"} Send email to build breakers:
      = f.check_box :send_build_failure_email, {:id => "send_build_failure_email"}

  = f.submit @repository.new_record? ? "Create" : "Update"

- unless @repository.new_record?
  = button_to "Delete", @repository, method: :delete, form_class: "delete-form", class: "danger-button", data: {confirm: "This is a permanent destructive action, are you sure?"}
